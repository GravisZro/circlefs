ifneq ($(VERBOSE),true)
  QUIET:=@
endif

ifndef CC
  CC:=gcc
endif

ifndef CXX
  CXX:=g++
endif

ifndef CXXSTANDARD
  CXXSTANDARD:=-std=c++14
endif

ifndef CSTANDARD
  CSTANDARD:=-std=c11
endif

ifndef SOURCE_PATH
  SOURCE_PATH=.
endif

ifndef BUILD_PATH
  BUILD_PATH=$(SOURCE_PATH)/bin
endif

ifneq ($(shell getconf _XOPEN_VERSION 1>/dev/null 2>&1; echo $$?),0)
  OUTPUTFILE:=posix_features.h
  TESTLIST:=atexit memmove strerror strnlen atoll strtof strtold strtoll strtoul strtoull snprintf faccessat fexecve fchdir seteuid setegid sigqueue killpg
  TESTFILE:="\#include <stdlib.h>\n\#include <string.h>\n\#include <stdio.h>\n\#include <unistd.h>\n\#include <signal.h>\nnamespace test { using ::$${funcname}; }\nint main(int, char*[]) { return 0; }"
  TESTFILEPATH:=/tmp/test.cpp
  $(shell rm -f $(OUTPUTFILE))
  $(shell for funcname in $(TESTLIST); do echo $(TESTFILE) | sed -e "s/\\\\n/\\n/g" > $(TESTFILEPATH) && ${CXX} ${CXXSTANDARD} ${TESTFILEPATH} 1>/dev/null 2>&1 && echo "#HAVE_$${funcname}" | tr '[:lower:]' '[:upper:]' | sed -e "s/HAVE/define HAVE/" >> $(OUTPUTFILE) ; done)
endif

INCLUDE_PATH  = -I$(SOURCE_PATH)
IOT_DEFINES   = $(DEFINES) -D_FILE_OFFSET_BITS=64
INT_CFLAGS    = $(CFLAGS) $(INT_DEFINES) -pipe -g -Os -Wall -W -fPIC $(INCLUDE_PATH)
INT_CXXFLAGS  = $(INT_CFLAGS) $(CXXFLAGS) -fno-exceptions -fno-rtti
INT_LDFLAGS   = $(STATICLIB) $(LDFLAGS) -lfuse

TARGET        = scfs
SOURCES       = main.cpp

OBJS := $(SOURCES:.s=.o)
OBJS := $(OBJS:.c=.o)
OBJS := $(OBJS:.cpp=.o)
OBJS := $(foreach f,$(OBJS),$(BUILD_PATH)/$(f))
SOURCES := $(foreach f,$(SOURCES),$(SOURCE_PATH)/$(f))

$(BUILD_PATH)/%.o: $(SOURCE_PATH)/%.cpp
	@echo [Compiling]: $<
	$(QUIET) $(CXX) -c -o $@ $< $(CXXSTANDARD) $(INT_CXXFLAGS)

$(BUILD_PATH)/%.o: $(SOURCE_PATH)/%.c
	@echo [Compiling]: $<
	$(QUIET) $(CC) -c -o $@ $< $(INT_CSTANDARD) $(INT_CFLAGS)

$(TARGET): OUTPUT_DIR $(OBJS)
	@echo [ Linking ]: $@
	$(QUIET) $(CXX) -o $@ $(OBJS) $(INT_LDFLAGS)

OUTPUT_DIR:
	$(QUIET) mkdir -p $(BUILD_PATH)

clean:
	$(QUIET) rm -f $(TARGET)
	$(QUIET) rm -rf $(BUILD_PATH)
